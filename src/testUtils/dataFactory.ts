import * as faker from 'faker';
import { WebhookEvent, EventPayloads } from '@octokit/webhooks';
import { RestEndpointMethodTypes } from '@octokit/rest';

type BuildRepositoryEventProps = {
  eventType:
    | 'archived'
    | 'created'
    | 'deleted'
    | 'edited'
    | 'privatized'
    | 'publicized'
    | 'renamed'
    | 'transferred'
    | 'unarchived';
  isFork: boolean;
  ownerName?: string;
  repoName?: string;
};

export const buildRepositoryEvent = ({
  eventType,
  isFork = false,
  ownerName,
  repoName,
}: BuildRepositoryEventProps): WebhookEvent<EventPayloads.WebhookPayloadRepository> => {
  const repository =
    repoName ??
    faker.random.word().toLowerCase() + '-' + faker.random.word().toLowerCase();
  const owner = ownerName ?? faker.internet.userName().toLowerCase();
  const ownerId = faker.random.number(20) + 1; // Avoid 0
  const repoNameWithOwner = `${owner}/${repository}`;

  const sender = faker.internet.userName();
  const senderId = faker.random.number(20) + 21; // Avoid clashing with ownerId

  return {
    id: faker.random.uuid(),
    // @ts-ignore
    name: `repository.${eventType}`,
    payload: {
      action: eventType,
      repository: {
        id: faker.random.number(1000) + 1,
        node_id: 'MDEwOlJlcG9zaXRvcnkxMTg=',
        name: faker.random.word() + ' ' + faker.random.word(),
        full_name: repoNameWithOwner,
        private: false,
        owner: {
          login: owner,
          id: ownerId,
          node_id: 'MDEyOk9yZ2FuaXphdGlvbjc1NzUxMTIw',
          avatar_url: `https://avatars.githubusercontent.com/u/${ownerId}?v=4`,
          gravatar_id: '',
          url: `https://api.github.com/users/${owner}`,
          html_url: `https://github.com/${owner}`,
          followers_url: `https://api.github.com/users/${owner}/followers`,
          following_url: `https://api.github.com/users/${owner}/following{/other_user}`,
          gists_url: `https://api.github.com/users/${owner}/gists{/gist_id}`,
          starred_url: `https://api.github.com/users/${owner}/starred{/owner}{/repo}`,
          subscriptions_url: `https://api.github.com/users/${owner}/subscriptions`,
          organizations_url: `https://api.github.com/users/${owner}/orgs`,
          repos_url: `https://api.github.com/users/${owner}/repos`,
          events_url: `https://api.github.com/users/${owner}/events{/privacy}`,
          received_events_url: `https://api.github.com/users/${owner}/received_events`,
          type: 'Organization',
          site_admin: false,
        },
        html_url: `https://github.com/${repoNameWithOwner}`,
        description: '',
        fork: isFork,
        url: `https://api.github.com/repos/${repoNameWithOwner}`,
        forks_url: `https://api.github.com/repos/${repoNameWithOwner}/forks`,
        keys_url: `https://api.github.com/repos/${repoNameWithOwner}/keys{/key_id}`,
        collaborators_url: `https://api.github.com/repos/${repoNameWithOwner}/collaborators{/collaborator}`,
        teams_url: `https://api.github.com/repos/${repoNameWithOwner}/teams`,
        hooks_url: `https://api.github.com/repos/${repoNameWithOwner}/hooks`,
        issue_events_url: `https://api.github.com/repos/${repoNameWithOwner}/issues/events{/number}`,
        events_url: `https://api.github.com/repos/${repoNameWithOwner}/events`,
        assignees_url: `https://api.github.com/repos/${repoNameWithOwner}/assignees{/user}`,
        branches_url: `https://api.github.com/repos/${repoNameWithOwner}/branches{/branch}`,
        tags_url: `https://api.github.com/repos/${repoNameWithOwner}/tags`,
        blobs_url: `https://api.github.com/repos/${repoNameWithOwner}/git/blobs{/sha}`,
        git_tags_url: `https://api.github.com/repos/${repoNameWithOwner}/git/tags{/sha}`,
        git_refs_url: `https://api.github.com/repos/${repoNameWithOwner}/git/refs{/sha}`,
        trees_url: `https://api.github.com/repos/${repoNameWithOwner}/git/trees{/sha}`,
        statuses_url: `https://api.github.com/repos/${repoNameWithOwner}/statuses/{sha}`,
        languages_url: `https://api.github.com/repos/${repoNameWithOwner}/languages`,
        stargazers_url: `https://api.github.com/repos/${repoNameWithOwner}/stargazers`,
        contributors_url: `https://api.github.com/repos/${repoNameWithOwner}/contributors`,
        subscribers_url: `https://api.github.com/repos/${repoNameWithOwner}/subscribers`,
        subscription_url: `https://api.github.com/repos/${repoNameWithOwner}/subscription`,
        commits_url: `https://api.github.com/repos/${repoNameWithOwner}/commits{/sha}`,
        git_commits_url: `https://api.github.com/repos/${repoNameWithOwner}/git/commits{/sha}`,
        comments_url: `https://api.github.com/repos/${repoNameWithOwner}/comments{/number}`,
        issue_comment_url: `https://api.github.com/repos/${repoNameWithOwner}/issues/comments{/number}`,
        contents_url: `https://api.github.com/repos/${repoNameWithOwner}/contents/{+path}`,
        compare_url: `https://api.github.com/repos/${repoNameWithOwner}/compare/{base}...{head}`,
        merges_url: `https://api.github.com/repos/${repoNameWithOwner}/merges`,
        archive_url: `https://api.github.com/repos/${repoNameWithOwner}/{archive_format}{/ref}`,
        downloads_url: `https://api.github.com/repos/${repoNameWithOwner}/downloads`,
        issues_url: `https://api.github.com/repos/${repoNameWithOwner}/issues{/number}`,
        pulls_url: `https://api.github.com/repos/${repoNameWithOwner}/pulls{/number}`,
        milestones_url: `https://api.github.com/repos/${repoNameWithOwner}/milestones{/number}`,
        notifications_url: `https://api.github.com/repos/${repoNameWithOwner}/notifications{?since,all,participating}`,
        labels_url: `https://api.github.com/repos/${repoNameWithOwner}/labels{/name}`,
        releases_url: `https://api.github.com/repos/${repoNameWithOwner}/releases{/id}`,
        deployments_url: `https://api.github.com/repos/${repoNameWithOwner}/deployments`,
        created_at: '2021-02-03T00:05:29Z',
        updated_at: '2021-02-02T18:31:52Z',
        pushed_at: '2021-01-25T23:12:19Z',
        git_url: `git://github.com/${repoNameWithOwner}.git`,
        ssh_url: `git@github.com:${repoNameWithOwner}.git`,
        clone_url: `https://github.com/${repoNameWithOwner}.git`,
        svn_url: `https://github.com/${repoNameWithOwner}`,
        homepage: '',
        size: 212,
        stargazers_count: 0,
        watchers_count: 0,
        language: null,
        has_issues: false,
        has_projects: true,
        has_downloads: true,
        has_wiki: true,
        has_pages: false,
        forks_count: 0,
        mirror_url: null,
        archived: false,
        disabled: false,
        open_issues_count: 0,
        license: null,
        forks: 0,
        open_issues: 0,
        watchers: 0,
        default_branch: 'main',
      },
      organization: {
        login: owner,
        id: ownerId,
        node_id: 'MDEyOk9yZ2FuaXphdGlvbjc1NzUxMTIw',
        url: `https://api.github.com/orgs/${owner}`,
        repos_url: `https://api.github.com/orgs/${owner}/repos`,
        events_url: `https://api.github.com/orgs/${owner}/events`,
        hooks_url: `https://api.github.com/orgs/${owner}/hooks`,
        issues_url: `https://api.github.com/orgs/${owner}/issues`,
        members_url: `https://api.github.com/orgs/${owner}/members{/member}`,
        public_members_url: `https://api.github.com/orgs/${owner}/public_members{/member}`,
        avatar_url: `https://avatars.githubusercontent.com/u/${ownerId}?v=4`,
        description: '',
      },
      sender: {
        login: sender,
        id: senderId,
        node_id: 'MDQ6VXNlcjIzMDI5OTAz',
        avatar_url: `https://avatars.githubusercontent.com/u/23029903?v=4`,
        gravatar_id: '',
        url: `https://api.github.com/users/${sender}`,
        html_url: `https://github.com/${sender}`,
        followers_url: `https://api.github.com/users/${sender}/followers`,
        following_url: `https://api.github.com/users/${sender}/following{/other_user}`,
        gists_url: `https://api.github.com/users/${sender}/gists{/gist_id}`,
        starred_url: `https://api.github.com/users/${sender}/starred{/owner}{/repo}`,
        subscriptions_url: `https://api.github.com/users/${sender}/subscriptions`,
        organizations_url: `https://api.github.com/users/${sender}/orgs`,
        repos_url: `https://api.github.com/users/${sender}/repos`,
        events_url: `https://api.github.com/users/${sender}/events{/privacy}`,
        received_events_url: `https://api.github.com/users/${sender}/received_events`,
        type: 'User',
        site_admin: false,
      },
    },
  };
};

type BuildRepositoryProps = Omit<BuildRepositoryEventProps, 'eventType'> & {
  parentOwnerName?: string;
  parentRepoName?: string;
};

export const buildRepository = ({
  isFork = false,
  ownerName,
  repoName,
  parentOwnerName,
  parentRepoName,
}: BuildRepositoryProps) => {
  const repository =
    repoName ??
    faker.random.word().toLowerCase() + '-' + faker.random.word().toLowerCase();
  const repositoryId = faker.random.number(200) + 1;
  const owner = ownerName ?? faker.internet.userName().toLowerCase();
  const ownerId = faker.random.number(20) + 1; // Avoid 0
  const repoNameWithOwner = `${owner}/${repository}`;

  const parentRepository =
    parentRepoName ??
    faker.random.word().toLowerCase() + '-' + faker.random.word().toLowerCase();
  const parentRepositoryId = faker.random.number(200) + 201;
  const parentOwner =
    parentOwnerName ?? faker.internet.userName().toLowerCase();
  const parentOwnerId = faker.random.number(20) + 21;
  const parentRepoNameWithOwner = `${parentOwner}/${parentRepository}`;

  const repositoryData: RestEndpointMethodTypes['repos']['get']['response']['data'] = {
    archive_url: `https://api.github.com/repos/${repoNameWithOwner}/{archive_format}{/ref}`,
    archived: false,
    assignees_url: `https://api.github.com/repos/${repoNameWithOwner}/assignees{/user}`,
    blobs_url: `https://api.github.com/repos/${repoNameWithOwner}/git/blobs{/sha}`,
    branches_url: `https://api.github.com/repos/${repoNameWithOwner}/branches{/branch}`,
    clone_url: `https://github.com/${repoNameWithOwner}.git`,
    collaborators_url: `https://api.github.com/repos/${repoNameWithOwner}/collaborators{/collaborator}`,
    comments_url: `https://api.github.com/repos/${repoNameWithOwner}/comments{/number}`,
    commits_url: `https://api.github.com/repos/${repoNameWithOwner}/commits{/sha}`,
    compare_url: `https://api.github.com/repos/${repoNameWithOwner}/compare/{base}...{head}`,
    contents_url: `https://api.github.com/repos/${repoNameWithOwner}/contents/{+path}`,
    contributors_url: `https://api.github.com/repos/${repoNameWithOwner}/contributors`,
    created_at: '2020-07-08T21:29:01Z',
    default_branch: 'main',
    deployments_url: `https://api.github.com/repos/${repoNameWithOwner}/deployments`,
    description: '',
    disabled: false,
    downloads_url: `https://api.github.com/repos/${repoNameWithOwner}/downloads`,
    events_url: `https://api.github.com/repos/${repoNameWithOwner}/events`,
    fork: isFork,
    forks: 0,
    forks_count: 0,
    forks_url: `https://api.github.com/repos/${repoNameWithOwner}/forks`,
    full_name: repoNameWithOwner,
    git_commits_url: `https://api.github.com/repos/${repoNameWithOwner}/git/commits{/sha}`,
    git_refs_url: `https://api.github.com/repos/${repoNameWithOwner}/git/refs{/sha}`,
    git_tags_url: `https://api.github.com/repos/${repoNameWithOwner}/git/tags{/sha}`,
    git_url: `git://github.com/${repoNameWithOwner}.git`,
    has_downloads: true,
    has_issues: true,
    has_pages: false,
    has_projects: true,
    has_wiki: true,
    homepage: '',
    hooks_url: `https://api.github.com/repos/${repoNameWithOwner}/hooks`,
    html_url: `https://github.com/${repoNameWithOwner}`,
    id: repositoryId,
    issue_comment_url: `https://api.github.com/repos/${repoNameWithOwner}/issues/comments{/number}`,
    issue_events_url: `https://api.github.com/repos/${repoNameWithOwner}/issues/events{/number}`,
    issues_url: `https://api.github.com/repos/${repoNameWithOwner}/issues{/number}`,
    keys_url: `https://api.github.com/repos/${repoNameWithOwner}/keys{/key_id}`,
    labels_url: `https://api.github.com/repos/${repoNameWithOwner}/labels{/name}`,
    language: 'JavaScript',
    languages_url: `https://api.github.com/repos/${repoNameWithOwner}/languages`,
    license: {
      key: 'mit',
      name: 'MIT License',
      node_id: 'MDc6TGljZW5zZTEz',
      spdx_id: 'MIT',
      url: 'https://api.github.com/licenses/mit',
    },
    merges_url: `https://api.github.com/repos/${repoNameWithOwner}/merges`,
    milestones_url: `https://api.github.com/repos/${repoNameWithOwner}/milestones{/number}`,
    mirror_url: null,
    name: repository,
    network_count: 0,
    node_id: 'MDEwOlJlcG9zaXRvcnkyNzgxOTgwNDc=',
    notifications_url: `https://api.github.com/repos/${repoNameWithOwner}/notifications{?since,all,participating}`,
    open_issues: 0,
    open_issues_count: 0,
    owner: {
      login: owner,
      id: ownerId,
      node_id: 'MDEyOk9yZ2FuaXphdGlvbjc1NzUxMTIw',
      avatar_url: `https://avatars.githubusercontent.com/u/${ownerId}?v=4`,
      gravatar_id: '',
      url: `https://api.github.com/users/${owner}`,
      html_url: `https://github.com/${owner}`,
      followers_url: `https://api.github.com/users/${owner}/followers`,
      following_url: `https://api.github.com/users/${owner}/following{/other_user}`,
      gists_url: `https://api.github.com/users/${owner}/gists{/gist_id}`,
      starred_url: `https://api.github.com/users/${owner}/starred{/owner}{/repo}`,
      subscriptions_url: `https://api.github.com/users/${owner}/subscriptions`,
      organizations_url: `https://api.github.com/users/${owner}/orgs`,
      repos_url: `https://api.github.com/users/${owner}/repos`,
      events_url: `https://api.github.com/users/${owner}/events{/privacy}`,
      received_events_url: `https://api.github.com/users/${owner}/received_events`,
      type: 'Organization',
      site_admin: false,
    },
    organization: {
      avatar_url: `https://avatars.githubusercontent.com/u/${ownerId}?v=4`,
      events_url: `https://api.github.com/users/${owner}/events{/privacy}`,
      followers_url: `https://api.github.com/users/${owner}/followers`,
      following_url: `https://api.github.com/users/${owner}/following{/other_user}`,
      gists_url: `https://api.github.com/users/${owner}/gists{/gist_id}`,
      gravatar_id: '',
      html_url: `https://github.com/${owner}`,
      id: ownerId,
      login: owner,
      node_id: 'MDEyOk9yZ2FuaXphdGlvbjc1NzUxMTIw',
      organizations_url: `https://api.github.com/users/${owner}/orgs`,
      received_events_url: `https://api.github.com/users/${owner}/received_events`,
      repos_url: `https://api.github.com/users/${owner}/repos`,
      site_admin: false,
      starred_url: `https://api.github.com/users/${owner}/starred{/owner}{/repo}`,
      subscriptions_url: `https://api.github.com/users/${owner}/subscriptions`,
      type: 'Organization',
      url: `https://api.github.com/users/${owner}`,
    },
    private: false,
    pulls_url: `https://api.github.com/repos/${repoNameWithOwner}/pulls{/number}`,
    pushed_at: '2020-12-13T00:46:08Z',
    releases_url: `https://api.github.com/repos/${repoNameWithOwner}/releases{/id}`,
    size: 1399,
    ssh_url: `git@github.com:${repoNameWithOwner}.git`,
    stargazers_count: 0,
    stargazers_url: `https://api.github.com/repos/${repoNameWithOwner}/stargazers`,
    statuses_url: `https://api.github.com/repos/${repoNameWithOwner}/statuses/{sha}`,
    subscribers_count: 0,
    subscribers_url: `https://api.github.com/repos/${repoNameWithOwner}/subscribers`,
    subscription_url: `https://api.github.com/repos/${repoNameWithOwner}/subscription`,
    svn_url: `https://github.com/${repoNameWithOwner}`,
    tags_url: `https://api.github.com/repos/${repoNameWithOwner}/tags`,
    teams_url: `https://api.github.com/repos/${repoNameWithOwner}/teams`,
    temp_clone_token: null,
    trees_url: `https://api.github.com/repos/${repoNameWithOwner}/git/trees{/sha}`,
    updated_at: '2020-12-08T00:50:39Z',
    url: `https://api.github.com/repos/${repoNameWithOwner}`,
    watchers: 0,
    watchers_count: 0,
  };

  if (isFork) {
    repositoryData.parent = {
      archive_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/{archive_format}{/ref}`,
      archived: false,
      assignees_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/assignees{/user}`,
      blobs_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/git/blobs{/sha}`,
      branches_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/branches{/branch}`,
      clone_url: `https://github.com/${parentRepoNameWithOwner}.git`,
      collaborators_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/collaborators{/collaborator}`,
      comments_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/comments{/number}`,
      commits_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/commits{/sha}`,
      compare_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/compare/{base}...{head}`,
      contents_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/contents/{+path}`,
      contributors_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/contributors`,
      created_at: '2017-07-05T06:07:37Z',
      default_branch: 'main',
      deployments_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/deployments`,
      description: '',
      disabled: false,
      downloads_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/downloads`,
      events_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/events`,
      fork: false,
      forks: 1,
      forks_count: 1,
      forks_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/forks`,
      full_name: parentRepoNameWithOwner,
      git_commits_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/git/commits{/sha}`,
      git_refs_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/git/refs{/sha}`,
      git_tags_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/git/tags{/sha}`,
      git_url: `git://github.com/${parentRepoNameWithOwner}.git`,
      has_downloads: true,
      has_issues: true,
      has_pages: false,
      has_projects: true,
      has_wiki: true,
      homepage: '',
      hooks_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/hooks`,
      html_url: `https://github.com/${parentRepoNameWithOwner}`,
      id: parentRepositoryId,
      issue_comment_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/issues/comments{/number}`,
      issue_events_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/issues/events{/number}`,
      issues_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/issues{/number}`,
      keys_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/keys{/key_id}`,
      labels_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/labels{/name}`,
      language: 'JavaScript',
      languages_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/languages`,
      license: {
        key: 'mit',
        name: 'MIT License',
        node_id: 'MDc6TGljZW5zZTEz',
        spdx_id: 'MIT',
        url: 'https://api.github.com/licenses/mit',
      },
      merges_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/merges`,
      milestones_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/milestones{/number}`,
      mirror_url: null,
      name: parentRepository,
      node_id: 'MDEwOlJlcG9zaXRvcnk5NjI4Mjc1MQ==',
      notifications_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/notifications{?since,all,participating}`,
      open_issues: 0,
      open_issues_count: 0,
      owner: {
        avatar_url: `https://avatars.githubusercontent.com/u/1500684?v=4`,
        events_url: `https://api.github.com/users/${parentOwner}/events{/privacy}`,
        followers_url: `https://api.github.com/users/${parentOwner}/followers`,
        following_url: `https://api.github.com/users/${parentOwner}/following{/other_user}`,
        gists_url: `https://api.github.com/users/${parentOwner}/gists{/gist_id}`,
        gravatar_id: '',
        html_url: `https://github.com/${parentOwner}`,
        id: parentOwnerId,
        login: parentOwner,
        node_id: 'MDQ6VXNlcjE1MDA2ODQ=',
        organizations_url: `https://api.github.com/users/${parentOwner}/orgs`,
        received_events_url: `https://api.github.com/users/${parentOwner}/received_events`,
        repos_url: `https://api.github.com/users/${parentOwner}/repos`,
        site_admin: false,
        starred_url: `https://api.github.com/users/${parentOwner}/starred{/owner}{/repo}`,
        subscriptions_url: `https://api.github.com/users/${parentOwner}/subscriptions`,
        type: 'User',
        url: `https://api.github.com/users/${parentOwner}`,
      },
      private: false,
      pulls_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/pulls{/number}`,
      pushed_at: '2021-02-06T09:46:59Z',
      releases_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/releases{/id}`,
      size: 212,
      ssh_url: `git@github.com:${parentRepoNameWithOwner}.git`,
      stargazers_count: 0,
      stargazers_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/stargazers`,
      statuses_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/statuses/{sha}`,
      subscribers_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/subscribers`,
      subscription_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/subscription`,
      svn_url: `https://github.com/${parentRepoNameWithOwner}`,
      tags_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/tags`,
      teams_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/teams`,
      trees_url: `https://api.github.com/repos/${parentRepoNameWithOwner}/git/trees{/sha}`,
      updated_at: '2021-02-02T18:31:52Z',
      url: `https://api.github.com/repos/${parentRepoNameWithOwner}`,
      watchers: 0,
      watchers_count: 0,
    };
  }

  return repositoryData;
};
